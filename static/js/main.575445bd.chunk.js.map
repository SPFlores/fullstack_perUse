{"version":3,"sources":["pages/Landing/Landing.js","pages/Login/Login.js","pages/Signup/Signup.js","pages/Search/Search.js","components/Navbar/Navbar.js","pages/Apply/Apply.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","_","useState","isLoggedIn","landingState","setLandingState","useEffect","sessionStorage","getItem","setItem","className","id","to","LoginPage","username","useRef","password","failedLoginUsername","failedLoginPassword","token","userState","setUserState","renderRedirect","length","handleLogInUser","e","preventDefault","current","value","config","method","url","data","axios","then","catch","console","log","style","color","htmlFor","type","name","ref","onClick","SignupPage","passwordConf","failedAll","failedSignupName","failedSignupUsername","failedSignupPassword","failedConfirmPassword","newUserState","setNewUserState","handleSignUpUser","failedSigupName","failedSignupnName","alert","SearchPage","jobs","location","locations","skills","skills_tags","types","renderCount","ableToApply","searchState","setSearchState","forEach","handleSearchAll","locationFilter","realLocations","map","job","filter","loc","locationOptions","Set","typeFilter","realTypes","job_type","typeOptions","skillsFilter","skillsRaw","skills_tag","realSkills","concat","apply","skill","skillOptions","filterJobs","target","validJobs","includes","getLocationOptions","listItems","key","indexOf","getTypeOptions","getSkillOptions","handleApply","dataset","title","window","href","renderCards","jobCards","company","dangerouslySetInnerHTML","__html","description","join","applicant_count","data-title","Navbar","loggedOut","navbarState","setNavbarState","handleLogout","ApplyPage","motivation","coverLetter","didApply","failedBoth","failedMotivation","failedCover","applicationState","setApplicationState","application","qs","stringify","jobID","headers","App","exact","path","render","Landing","Search","Apply","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.575445bd.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst LandingPage = _ => {\r\n  const [landingState, setLandingState] = useState({\r\n    isLoggedIn: false\r\n  })\r\n\r\n  useEffect(_ => {\r\n    if (sessionStorage.getItem('isLoggedIn') === 'true') {\r\n      setLandingState({ ...landingState, isLoggedIn: true })\r\n    } else {\r\n      sessionStorage.setItem('isLoggedIn', false)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className='mainArea'>\r\n      <h1 id='mainTitle'>perUse</h1>\r\n      <p id='landingText'>Welcome to perUse, the job site for U! Take a look at the jobs we host to see if any of them could be your next best fit! Be sure to sign in (or sign up) to get access to all of our functionality. Happy perUsing!</p>\r\n      <div>\r\n        <Link to='/search'>\r\n          <button className='blockButton' id='searchingButton'>Search</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LandingPage\r\n","import React, { useState, useRef } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nconst LoginPage = _ => {\r\n  const username = useRef()\r\n  const password = useRef()\r\n\r\n  const [userState, setUserState] = useState({\r\n    isLoggedIn: false,\r\n    failedLoginUsername: false,\r\n    failedLoginPassword: false,\r\n    token: ''\r\n  })\r\n\r\n  userState.renderRedirect = _ => {\r\n    if (userState.token.length > 0) {\r\n      return <Redirect to='/' />\r\n    }\r\n  }\r\n\r\n  userState.handleLogInUser = e => {\r\n    e.preventDefault()\r\n    if (username.current.value === '' && password.current.value === '') {\r\n      setUserState({\r\n        ...userState,\r\n        failedLoginUsername: true,\r\n        failedLoginPassword: true\r\n      })\r\n      sessionStorage.setItem('isLoggedIn', false)\r\n    } else if (username.current.value === '') {\r\n      setUserState({\r\n        ...userState,\r\n        failedLoginUsername: true,\r\n        failedLoginPassword: false\r\n      })\r\n      sessionStorage.setItem('isLoggedIn', false)\r\n    } else if (password.current.value === '') {\r\n      setUserState({\r\n        ...userState,\r\n        failedLoginUsername: false,\r\n        failedLoginPassword: true\r\n      })\r\n      sessionStorage.setItem('isLoggedIn', false)\r\n    } else {\r\n      const user = {\r\n        username: username.current.value,\r\n        password: password.current.value\r\n      }\r\n      const config = {\r\n        method: 'post',\r\n        url: 'https://divercity-test.herokuapp.com/login',\r\n        data: user\r\n      }\r\n\r\n      axios(config)\r\n        .then(({ data }) => {\r\n          if (data.token) {\r\n            sessionStorage.setItem('isLoggedIn', true)\r\n            sessionStorage.setItem('token', data.token)\r\n            setUserState({ ...userState, token: data.token, isLoggedIn: true })\r\n          }\r\n        })\r\n        .catch(e => {\r\n          console.log(e)\r\n          setUserState({ ...userState, isLoggedIn: false })\r\n        })\r\n\r\n      // axios.post('/login', {\r\n      //   username: username.current.value,\r\n      //   password: password.current.value\r\n      // })\r\n      //   .then(({ data }) => {\r\n      //     if (data.token) {\r\n      //       sessionStorage.setItem('isLoggedIn', true)\r\n      //       sessionStorage.setItem('token', data.token)\r\n      //       setUserState({ ...userState, token: data.token, isLoggedIn: true })\r\n      //     }\r\n      //   })\r\n      //   .catch(_ => {\r\n      //     setUserState({ ...userState, isLoggedIn: false })\r\n      //   })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='mainArea'>\r\n      {userState.isLoggedIn ? userState.renderRedirect() : null}\r\n\r\n      <div>\r\n        <h4 className='userPlease'>Log in to get the most out of perUse!</h4>\r\n      </div>\r\n\r\n      <form>\r\n        <h5>Login To Your Account</h5>\r\n        <div>\r\n          {userState.failedLoginUsername ? <p style={{ color: '#ef6461' }}>Please enter your username!</p> : null}\r\n          <label htmlFor='username'>Username: </label>\r\n          <input type='text' id='username' name='username' ref={username} className='usernameEntry' />\r\n        </div>\r\n        <div>\r\n          {userState.failedLoginPassword ? <p style={{ color: '#ef6461' }}>Please enter your password!</p> : null}\r\n          <label htmlFor='password'>Password: </label>\r\n          <input type='password' id='password' name='password' ref={password} className='passwordEntry' />\r\n        </div>\r\n        {/* checkbox for \"remember me\" that sets local storage */}\r\n        {/* <div>\r\n          <input type='checkbox' name='rememberMe' id='rememberMe' ref={rememberMe} />\r\n          <label htmlFor='rememberMe'>Remember Me</label>\r\n        </div> */}\r\n        <button onClick={userState.handleLogInUser} className='loginPgBtn'>Submit</button>\r\n      </form>\r\n\r\n      <br />\r\n\r\n      <h5>Don't have an account? No problem!</h5>\r\n      <Link to='/signup'>\r\n        <button className='loginPgBtn'>Sign Up</button>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n","import React, { useState, useRef } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nconst SignupPage = _ => {\r\n  const name = useRef()\r\n  const username = useRef()\r\n  const password = useRef()\r\n  const passwordConf = useRef()\r\n\r\n  const [newUserState, setNewUserState] = useState({\r\n    isLoggedIn: false,\r\n    failedAll: false,\r\n    failedSignupName: false,\r\n    failedSignupUsername: false,\r\n    failedSignupPassword: false,\r\n    failedConfirmPassword: false\r\n  })\r\n\r\n  newUserState.renderRedirect = _ => {\r\n    if (newUserState.isLoggedIn) {\r\n      return <Redirect to='/' />\r\n    }\r\n  }\r\n\r\n  newUserState.handleSignUpUser = e => {\r\n    e.preventDefault()\r\n    if (name.current.value === '' && username.current.value === '' && password.current.value === '') {\r\n      setNewUserState({\r\n        ...newUserState,\r\n        failedAll: true\r\n      })\r\n      sessionStorage.setItem('isLoggedIn', false)\r\n    } else if (name.current.value === '') {\r\n      setNewUserState({\r\n        ...newUserState,\r\n        failedAll: false,\r\n        failedSignupName: true,\r\n        failedSignupUsername: false,\r\n        failedSignupPassword: false,\r\n        failedConfirmPassword: false\r\n      })\r\n      sessionStorage.setItem('isLoggedIn', false)\r\n    } else if (username.current.value === '') {\r\n      setNewUserState({\r\n        ...newUserState,\r\n        failedAll: false,\r\n        failedSigupName: false,\r\n        failedSignupUsername: true,\r\n        failedSignupPassword: false,\r\n        failedConfirmPassword: false\r\n      })\r\n      sessionStorage.setItem('isLoggedIn', false)\r\n    } else if (password.current.value === '') {\r\n      setNewUserState({\r\n        ...newUserState,\r\n        failedAll: false,\r\n        failedSignupnName: false,\r\n        failedSignupUsername: false,\r\n        failedSignupPassword: true,\r\n        failedConfirmPassword: false\r\n      })\r\n      sessionStorage.setItem('isLoggedIn', false)\r\n    } else if (password.current.value !== passwordConf.current.value) {\r\n      setNewUserState({\r\n        ...newUserState,\r\n        failedAll: false,\r\n        failedSignupnName: false,\r\n        failedSignupUsername: false,\r\n        failedSignupPassword: false,\r\n        failedConfirmPassword: true\r\n      })\r\n      sessionStorage.setItem('isLoggedIn', false)\r\n    } else {\r\n      const user = {\r\n        username: username.current.value,\r\n        password: password.current.value,\r\n        name: name.current.value\r\n      }\r\n      const config = {\r\n        method: 'post',\r\n        url: 'https://divercity-test.herokuapp.com/register',\r\n        data: user\r\n      }\r\n\r\n      axios(config)\r\n        .then(({ data }) => {\r\n          const user = {\r\n            username: username.current.value,\r\n            password: password.current.value\r\n          }\r\n          const config = {\r\n            method: 'post',\r\n            url: 'https://divercity-test.herokuapp.com/login',\r\n            data: user\r\n          }\r\n\r\n          axios(config)\r\n            .then(({ data }) => {\r\n              sessionStorage.setItem('isLoggedIn', true)\r\n              sessionStorage.setItem('token', data.token)\r\n              setNewUserState({ ...newUserState, isLoggedIn: true })\r\n            })\r\n            .catch(e => console.log(e))\r\n        })\r\n        .catch(e => {\r\n          alert('Unable to register!')\r\n          console.log(e)\r\n        })\r\n\r\n      // axios.post('/register', {\r\n      //   username: username.current.value,\r\n      //   password: password.current.value,\r\n      //   name: name.current.value\r\n      // })\r\n      //   .then(_ => {\r\n      //     axios.post('/login', {\r\n      //       username: username.current.value,\r\n      //       password: password.current.value\r\n      //     })\r\n      //       .then(({ data }) => {\r\n      //         sessionStorage.setItem('isLoggedIn', true)\r\n      //         sessionStorage.setItem('token', data.token)\r\n      //         setNewUserState({ ...newUserState, isLoggedIn: true })\r\n      //       })\r\n      //       .catch(e => console.log(e))\r\n      //   })\r\n      //   .catch(e => {\r\n      //     alert('Unable to register!')\r\n      //     console.log(e)\r\n      //   })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='mainArea'>\r\n      {newUserState.isLoggedIn ? newUserState.renderRedirect() : null}\r\n\r\n      <div>\r\n        <h4 className='userPlease'>Sign up to get the most out of perUse!</h4>\r\n      </div>\r\n\r\n      <form>\r\n        <h5>Sign Up For An Account</h5>\r\n        <div>\r\n          {newUserState.failedAll ? <p style={{ color: '#ef6461' }}>Please enter your information!</p> : null}\r\n          {newUserState.failedSignupName ? <p style={{ color: '#ef6461' }}>Please enter your name!</p> : null}\r\n          <label htmlFor='name'>Name: </label>\r\n          <input type='text' name='name' ref={name} id='nameEntry' />\r\n        </div>\r\n        <div>\r\n          {newUserState.failedSignupUsername ? <p style={{ color: '#ef6461' }}>Please enter your username!</p> : null}\r\n          <label htmlFor='username'>Username: </label>\r\n          <input type='text' id='username' name='username' ref={username} className='usernameEntry' />\r\n        </div>\r\n        <div>\r\n          {newUserState.failedSignupPassword ? <p style={{ color: '#ef6461' }}>Please enter a password!</p> : null}\r\n          <label htmlFor='password'>Password: </label>\r\n          <input type='password' id='password' name='password' ref={password} className='passwordEntry' />\r\n        </div>\r\n        <div>\r\n          {newUserState.failedConfirmPassword ? <p style={{ color: 'red' }}>Your passwords do not match!</p> : null}\r\n          <label htmlFor='passwordConf'>Password: </label>\r\n          <input type='password' id='passwordConf' name='passwordConf' ref={passwordConf} className='passwordEntry' />\r\n        </div>\r\n        <button onClick={newUserState.handleSignUpUser} className='signupBtn'>Submit</button>\r\n      </form>\r\n\r\n      <br />\r\n\r\n      <h5>Already have an account? No problem!</h5>\r\n      <Link to='/login'>\r\n        <button className='signupBtn'>Login</button>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignupPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nconst SearchPage = _ => {\r\n  const [searchState, setSearchState] = useState({\r\n    jobs: [],\r\n    location: false,\r\n    locations: [],\r\n    skills: false,\r\n    skills_tags: [],\r\n    type: false,\r\n    types: [],\r\n    renderCount: 0,\r\n    ableToApply: false\r\n  })\r\n\r\n  useEffect(_ => {\r\n    if (sessionStorage.getItem('isLoggedIn') === 'true') {\r\n      setSearchState({ ...searchState, ableToApply: true })\r\n    } else {\r\n      setSearchState({ ...searchState, ableToApply: false })\r\n    }\r\n  }, [])\r\n\r\n  useEffect(_ => {\r\n    searchState.jobs.forEach(_ => setSearchState({ ...searchState, renderCount: searchState.renderCount + 1 }))\r\n  }, [searchState.jobs])\r\n\r\n  searchState.handleSearchAll = e => {\r\n    const config = {\r\n      method: 'get',\r\n      url: 'https://divercity-test.herokuapp.com/jobs'\r\n    }\r\n\r\n    axios(config)\r\n      .then(({ data }) => {\r\n        setSearchState({ ...searchState, jobs: data.jobs })\r\n      })\r\n      .catch(e => console.log(e))\r\n\r\n    // axios.get('/jobs')\r\n    //   .then(({ data }) => {\r\n    //     setSearchState({ ...searchState, jobs: data.jobs })\r\n    //   })\r\n    //   .catch(e => console.log(e))\r\n  }\r\n\r\n  searchState.locationFilter = _ => {\r\n    const config = {\r\n      method: 'get',\r\n      url: 'https://divercity-test.herokuapp.com/jobs'\r\n    }\r\n\r\n    axios(config)\r\n      .then(({ data }) => {\r\n        const locationsArr = data.jobs.map(job => job.location)\r\n        const realLocations = locationsArr.filter(loc => typeof loc !== 'undefined')\r\n        const locationOptions = new Set(realLocations)\r\n        setSearchState({\r\n          ...searchState,\r\n          location: true,\r\n          locations: [...locationOptions],\r\n          type: false,\r\n          skills: false\r\n        })\r\n      })\r\n      .catch(e => console.log(e))\r\n\r\n    // axios.get('/jobs')\r\n    //   .then(({ data }) => {\r\n    //     const locationsArr = data.jobs.map(job => job.location)\r\n    //     const realLocations = locationsArr.filter(loc => typeof loc !== 'undefined')\r\n    //     const locationOptions = new Set(realLocations)\r\n    //     setSearchState({\r\n    //       ...searchState,\r\n    //       location: true,\r\n    //       locations: [...locationOptions],\r\n    //       type: false,\r\n    //       skills: false\r\n    //     })\r\n    //   })\r\n    //   .catch(e => console.log(e))\r\n  }\r\n\r\n  searchState.typeFilter = _ => {\r\n    const config = {\r\n      method: 'get',\r\n      url: 'https://divercity-test.herokuapp.com/jobs'\r\n    }\r\n\r\n    axios(config)\r\n      .then(({ data }) => {\r\n        const typeArr = data.jobs.map(job => job.job_type)\r\n        const realTypes = typeArr.filter(type => typeof type !== 'undefined')\r\n        const typeOptions = new Set(realTypes)\r\n        setSearchState({\r\n          ...searchState,\r\n          location: false,\r\n          type: true,\r\n          types: [...typeOptions],\r\n          skills: false\r\n        })\r\n      })\r\n      .catch(e => console.log(e))\r\n\r\n    // axios.get('/jobs')\r\n    //   .then(({ data }) => {\r\n    //     const typeArr = data.jobs.map(job => job.job_type)\r\n    //     const realTypes = typeArr.filter(type => typeof type !== 'undefined')\r\n    //     const typeOptions = new Set(realTypes)\r\n    //     setSearchState({\r\n    //       ...searchState,\r\n    //       location: false,\r\n    //       type: true,\r\n    //       types: [...typeOptions],\r\n    //       skills: false\r\n    //     })\r\n    //   })\r\n    //   .catch(e => console.log(e))\r\n  }\r\n\r\n  searchState.skillsFilter = _ => {\r\n    const config = {\r\n      method: 'get',\r\n      url: 'https://divercity-test.herokuapp.com/jobs'\r\n    }\r\n\r\n    axios(config)\r\n      .then(({ data }) => {\r\n        const skillsRaw = data.jobs.map(job => job.skills_tag)\r\n        const skillsArr = [].concat.apply([], skillsRaw)\r\n        const realSkills = skillsArr.filter(skill => typeof skill !== 'undefined')\r\n        const skillOptions = new Set(realSkills)\r\n        setSearchState({\r\n          ...searchState,\r\n          location: false,\r\n          type: false,\r\n          skills_tags: [...skillOptions],\r\n          skills: true\r\n        })\r\n      })\r\n      .catch(e => console.log(e))\r\n\r\n    // axios.get('/jobs')\r\n    //   .then(({ data }) => {\r\n    //     const skillsRaw = data.jobs.map(job => job.skills_tag)\r\n    //     const skillsArr = [].concat.apply([], skillsRaw)\r\n    //     const realSkills = skillsArr.filter(skill => typeof skill !== 'undefined')\r\n    //     const skillOptions = new Set(realSkills)\r\n    //     setSearchState({\r\n    //       ...searchState,\r\n    //       location: false,\r\n    //       type: false,\r\n    //       skills_tags: [...skillOptions],\r\n    //       skills: true\r\n    //     })\r\n    //   })\r\n    //   .catch(e => console.log(e))\r\n  }\r\n\r\n  searchState.filterJobs = ({ target }) => {\r\n    const value = target.id\r\n    const filter = target.className\r\n\r\n    const config = {\r\n      method: 'get',\r\n      url: 'https://divercity-test.herokuapp.com/jobs'\r\n    }\r\n\r\n    axios(config)\r\n      .then(({ data }) => {\r\n        if (filter === 'location') {\r\n          const validJobs = data.jobs.filter(job => { return job.location === value })\r\n          setSearchState({ ...searchState, jobs: validJobs })\r\n        } else if (filter === 'type') {\r\n          const validJobs = data.jobs.filter(job => { return job.job_type === value })\r\n          setSearchState({ ...searchState, jobs: validJobs })\r\n        } else if (filter === 'skills') {\r\n          const validJobs = data.jobs.filter(job => job.skills_tag.includes(value))\r\n          setSearchState({ ...searchState, jobs: validJobs })\r\n        } else alert('Something is not working')\r\n      })\r\n      .catch(e => console.log(e))\r\n\r\n    // axios.get('/jobs')\r\n    //   .then(({ data }) => {\r\n    //     if (filter === 'location') {\r\n    //       const validJobs = data.jobs.filter(job => { return job.location === value })\r\n    //       setSearchState({ ...searchState, jobs: validJobs })\r\n    //     } else if (filter === 'type') {\r\n    //       const validJobs = data.jobs.filter(job => { return job.job_type === value })\r\n    //       setSearchState({ ...searchState, jobs: validJobs })\r\n    //     } else if (filter === 'skills') {\r\n    //       const validJobs = data.jobs.filter(job => job.skills_tag.includes(value))\r\n    //       setSearchState({ ...searchState, jobs: validJobs })\r\n    //     } else console.log('not working')\r\n    //   })\r\n    //   .catch(e => console.log(e))\r\n  }\r\n\r\n  searchState.getLocationOptions = _ => {\r\n    const listItems = searchState.locations.map(location =>\r\n      <button className='location' id={location} key={searchState.locations.indexOf(location)} onClick={searchState.filterJobs}>{location}</button>\r\n    )\r\n    return <ul>{listItems}</ul>\r\n  }\r\n\r\n  searchState.getTypeOptions = _ => {\r\n    const listItems = searchState.types.map(type =>\r\n      <button className='type' id={type} onClick={searchState.filterJobs} key={searchState.types.indexOf(type)}>{type}</button>\r\n    )\r\n    return <ul>{listItems}</ul>\r\n  }\r\n\r\n  searchState.getSkillOptions = _ => {\r\n    const listItems = searchState.skills_tags.map(skill =>\r\n      <button className='skills' id={skill} onClick={searchState.filterJobs} key={searchState.skills_tags.indexOf(skill)}>{skill}</button>\r\n    )\r\n    return <ul>{listItems}</ul>\r\n  }\r\n\r\n  searchState.handleApply = e => {\r\n    e.preventDefault()\r\n    sessionStorage.setItem('jobID', e.target.id)\r\n    sessionStorage.setItem('title', e.target.dataset.title)\r\n    window.location.href = '/apply'\r\n  }\r\n\r\n  searchState.renderCards = _ => {\r\n    const jobCards = searchState.jobs.map(job =>\r\n      <div key={job.id} className='jobCard'>\r\n        <h3 className='jobCardTitle'>Title: {job.title}</h3>\r\n        <h5 className='jobH'>Company: {job.company}</h5>\r\n        <h5 className='jobH'>Type: {job.job_type}</h5>\r\n        <h5 className='jobH'>Location: {job.location}</h5>\r\n        {/* It is acknowledged that the below is not best practice when importing data from outside APIs for consumption. However, it does allow for the most flexibility in terms of consuming this particular API and is limited in scope to this small project. An alternative would be to import the description and .replace() all tags with apces, however this does not allow for flexibility in formatting of description. */}\r\n        <div dangerouslySetInnerHTML={{ __html: job.description }} />\r\n        <p><strong>Skills:</strong> {job.skills_tag.join(', ')}</p>\r\n        <p><strong>Applicant count:</strong> {job.applicant_count}</p>\r\n        {searchState.ableToApply\r\n          ? <button id={job.id} data-title={job.title} onClick={searchState.handleApply} className='applyBtn'>Apply</button>\r\n          : <div>\r\n            <p style={{ color: '#ef6461' }}>Please log in/sign up to apply!</p>\r\n            <Link to='/login'>\r\n              <button className='notLoggedInBtn'>Login</button>\r\n            </Link>\r\n            <Link to='/signup'>\r\n              <button className='notLoggedInBtn'>Sign Up</button>\r\n            </Link>\r\n          </div>\r\n        }\r\n      </div>)\r\n    return <ul>{jobCards}</ul>\r\n  }\r\n\r\n  return (\r\n    <div className='mainArea'>\r\n      <h4>Welcome to our search page!</h4>\r\n      <p>Here you can view all jobs available or sort by location, type, of skills needed. We make it easy to filter for the job right for you--once chosen filter is selected, you will be presented with options for your search, no typing or guessing at keywords necessary.</p>\r\n      <br />\r\n      <button id='searchAll' onClick={searchState.handleSearchAll} className='allJobs blockButton'>Display All Jobs</button>\r\n      <br />\r\n      <h4>Filter jobs by:</h4>\r\n      <button id='locationButton' onClick={searchState.locationFilter} className='filterBtn'>Location</button>\r\n      <button id='typeButton' onClick={searchState.typeFilter} className='filterBtn'>Type of Job</button>\r\n      <button id='skillsButton' onClick={searchState.skillsFilter} className='filterBtn'>Skills</button>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      {searchState.location ? searchState.getLocationOptions() : searchState.type ? searchState.getTypeOptions() : searchState.skills ? searchState.getSkillOptions() : null}\r\n\r\n      {searchState.renderCount > 0 ? searchState.renderCards() : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst Navbar = _ => {\r\n  const [navbarState, setNavbarState] = useState({\r\n    isLoggedIn: false,\r\n    loggedOut: true\r\n  })\r\n\r\n  useEffect(_ => {\r\n    if (sessionStorage.getItem('isLoggedIn') === 'true') {\r\n      setNavbarState({ ...navbarState, isLoggedIn: true, loggedOut: false })\r\n    } else {\r\n      setNavbarState({ ...navbarState, isLoggedIn: false, loggedOut: true })\r\n    }\r\n  }, [])\r\n\r\n  navbarState.handleLogout = e => {\r\n    setNavbarState({ ...navbarState, isLoggedIn: false })\r\n    sessionStorage.setItem('isLoggedIn', 'false')\r\n    sessionStorage.setItem('token', '')\r\n  }\r\n\r\n  return (\r\n    <ul id='navBar'>\r\n      <li className='navLILeft'><a className='navLink' href='/'>Home</a></li>\r\n      <li className='navLILeft'><a className='navLink' href='/search'>Search</a></li>\r\n      {navbarState.isLoggedIn\r\n        ? <li className='navLIRight'><a className='navLink' href='/' onClick={navbarState.handleLogout}>Logout</a></li> : null}\r\n      {navbarState.loggedOut\r\n        ? <li className='navLIRight'><a className='navLink' href='/signup'>Signup</a></li>\r\n        : null\r\n      }\r\n      {navbarState.loggedOut\r\n        ? <li className='navLIRight'><a className='navLink' href='/login'>Login</a></li>\r\n        : null\r\n      }\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState, useRef } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport qs from 'qs'\r\nimport axios from 'axios'\r\n\r\nconst ApplyPage = _ => {\r\n  const motivation = useRef()\r\n  const coverLetter = useRef()\r\n\r\n  const [applicationState, setApplicationState] = useState({\r\n    didApply: false,\r\n    isLoggedIn: false,\r\n    failedBoth: false,\r\n    failedMotivation: false,\r\n    failedCover: false\r\n  })\r\n\r\n  applicationState.handleApply = e => {\r\n    e.preventDefault()\r\n    if (sessionStorage.getItem('isLoggedIn') === 'true' && sessionStorage.getItem('token').length > 0) {\r\n      setApplicationState({ ...applicationState, isLoggedIn: true })\r\n      if (motivation.current.value === '' && coverLetter.current.value === '') {\r\n        setApplicationState({\r\n          ...applicationState,\r\n          failedBoth: true,\r\n          failedMotivation: false,\r\n          failedCover: false\r\n        })\r\n      } else if (motivation.current.value === '') {\r\n        setApplicationState({\r\n          ...applicationState,\r\n          failedBoth: false,\r\n          failedMotivation: true,\r\n          failedCover: false\r\n        })\r\n      } else if (coverLetter.current.value === '') {\r\n        setApplicationState({\r\n          ...applicationState,\r\n          failedBoth: false,\r\n          failedMotivation: false,\r\n          failedCover: true\r\n        })\r\n      } else {\r\n        const application = qs.stringify({\r\n          'motivation': motivation.current.value,\r\n          'cover_letter': coverLetter.current.value\r\n        })\r\n        const jobID = sessionStorage.getItem('jobID')\r\n        const token = sessionStorage.getItem('token')\r\n        const config = {\r\n          method: 'post',\r\n          url: `https://divercity-test.herokuapp.com/jobs/${jobID}/apply`,\r\n          headers: {\r\n            'Authorization': token,\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n          },\r\n          data: application\r\n        }\r\n\r\n        axios(config)\r\n          .then(({ data }) => {\r\n            setApplicationState({ ...applicationState, didApply: true })\r\n          })\r\n          .catch(e => console.log(e))\r\n\r\n        // axios.post(`/apply/${jobID}/${token}`, applicationString, headers)\r\n        //   .then(_ => {\r\n        //     setApplicationState({ ...applicationState, didApply: true })\r\n        //     console.log('hit apply post successfully')\r\n        //   })\r\n        //   .catch(e => console.log(e))\r\n      }\r\n    } else {\r\n      alert('please log in to apply')\r\n      setApplicationState({ ...applicationState, isLoggedIn: false })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='mainArea'>\r\n      <div>\r\n        <h3 id='applicationTitle'>Application for {sessionStorage.getItem('title')}</h3>\r\n        {applicationState.failedBoth ? <p style={{ color: '#ef6461' }}>Please enter your information!</p> : null}\r\n        {applicationState.failedMotivation ? <p style={{ color: '#ef6461' }}>Please enter your motivation!</p> : null}\r\n        <label htmlFor='motivation' >Motivation</label>\r\n        <br />\r\n        <textarea name='motivation' id='motivationInput' ref={motivation} />\r\n        <br />\r\n        {applicationState.failedCover ? <p style={{ color: '#ef6461' }}>Please enter your cover letter!</p> : null}\r\n        <label htmlFor='coverLetter'>Cover letter</label>\r\n        <br />\r\n        <textarea name='coverLetter' id='coverLetterInput' ref={coverLetter} />\r\n        <br />\r\n        {applicationState.didApply\r\n          ? <div>\r\n            <h6 id='appSuccess'>You have applied. Good luck!</h6>\r\n            <Link to='/search'>\r\n              <button className='applicationBtn'>Back to search</button>\r\n            </Link>\r\n            <br />\r\n          </div> : null}\r\n        {applicationState.didApply\r\n          ? null\r\n          : <button onClick={applicationState.handleApply} id='applicationApplyBtn' className='blockButton'>Apply!</button>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ApplyPage\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Landing from './pages/Landing'\nimport LogIn from './pages/Login'\nimport SignUp from './pages/Signup'\nimport Search from './pages/Search'\nimport Navbar from './components/Navbar'\nimport Apply from './pages/Apply'\nimport './App.css'\n\nconst App = _ => {\n  return (\n    <Router>\n      <Navbar />\n      <Route exact path='/' render={_ => (<Landing />)} />\n      <Route path='/login' render={_ => (<LogIn />)} />\n      <Route path='/signup' render={_ => (<SignUp />)} />\n      <Route path='/search' render={_ => (<Search />)} />\n      <Route path='/apply' render={_ => (<Apply />)} />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}